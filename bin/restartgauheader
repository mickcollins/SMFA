#!/usr/bin/perl

#use warnings;
use Config;
#use lib "~/SMFA_RIKA/CPAN";
use Shell qw(date pwd);
use File::Copy 'cp';
use Cwd;

# Perl5+Curses ONLY!
# # # Comment these lines for use with Perl4/curseperl
#BEGIN { $Curses::OldCurses = 1; }
#use Curses;                     # PerlMenu needs "Curses"
#use perlmenu;                   # Main menu package (Perl5 only)

$| = 1;                                # Flush after every write to stdout

  $JDIR = pwd();             # job directory
  $JDIR =~ s/\n//;
  $WORK = "WORK";            # calculations are carried out in WORK

$CODEDIR=`awk 'NR==1,NR==1 {print \$1}' CODENAME`;
chomp($CODEDIR);
$CODEDIR=~ s/^\s+|\s+$//g;

$EXEDIR=`awk 'NR==1,NR==1 {print \$1}' EXENAME`;
chomp($EXEDIR);
$EXEDIR=~ s/^\s+|\s+$//g;


open(TMP,"<IN_JOBTYPE");
while (<TMP>) {
if ($. == 2) {$deriv="$_"};
}
chomp $deriv;

&Lev0_chg_MAC_iter_gau;
&SMFAgauinputs_MAC;

$out="OUTLIST";
$storelogs="storelogs";
if ( -s $out ) {
open(OUT,"<OUTLIST");
while (<OUT>) {
$file="$_";
chomp($file);
$file=~ s/^\s+|\s+$//g;
system("mv $storelogs\/$file $file");
}
system("rmdir $storelogs");
close OUT;
}

$out="FCHKLIST";
$storefchks="storefchks";
if ( -s $out ) {
open(OUT,"<FCHKLIST");
while (<OUT>) {
$file="$_";
chomp($file);
$file=~ s/^\s+|\s+$//g;
system("mv $storefchks\/$file $file");
}
system("rmdir $storefchks");
close OUT;
}

&dodaltondisp;

$out="OUTLISTDAL";
$storelogs="storelogsdal";
if ( -s $out ) {
open(OUT,"<OUTLISTDAL");
while (<OUT>) {
$file="$_";
chomp($file);
$file=~ s/^\s+|\s+$//g;
system("mv $storelogs\/$file $file");
}
system("rmdir $storelogs");
close OUT;
}


&SMFArunallgau;
&anal_MAC;


